
./Debug/delay.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
 */
void startup(void) __attribute__((naked)) __attribute__((section (".start_section")) );

void startup ( void )
{
asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
20000002:	4685      	mov	sp, r0
20000004:	f000 f85a 	bl	200000bc <main>
20000008:	e7fe      	b.n	20000008 <startup+0x8>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	".L1: B .L1\n"				/* never return */
	) ;
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <delay_250ns>:
#define GPIO_D_MODER (volatile unsigned long *) 0x40020C00 // Config for GPIO_D b0-7

//#define SIMULATOR

void delay_250ns(void) 
{
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
    *STK_CTRL = 0;
20000014:	4b0c      	ldr	r3, [pc, #48]	; (20000048 <delay_250ns+0x38>)
20000016:	2200      	movs	r2, #0
20000018:	601a      	str	r2, [r3, #0]
    *STK_LOAD = 168/4 - 1;
2000001a:	4b0c      	ldr	r3, [pc, #48]	; (2000004c <delay_250ns+0x3c>)
2000001c:	2229      	movs	r2, #41	; 0x29
2000001e:	601a      	str	r2, [r3, #0]
    *STK_VAL = 0;
20000020:	4b0b      	ldr	r3, [pc, #44]	; (20000050 <delay_250ns+0x40>)
20000022:	2200      	movs	r2, #0
20000024:	601a      	str	r2, [r3, #0]
    *STK_CTRL = 5;
20000026:	4b08      	ldr	r3, [pc, #32]	; (20000048 <delay_250ns+0x38>)
20000028:	2205      	movs	r2, #5
2000002a:	601a      	str	r2, [r3, #0]
    while (!(*STK_CTRL & 0x10000));
2000002c:	46c0      	nop			; (mov r8, r8)
2000002e:	4b06      	ldr	r3, [pc, #24]	; (20000048 <delay_250ns+0x38>)
20000030:	681a      	ldr	r2, [r3, #0]
20000032:	2380      	movs	r3, #128	; 0x80
20000034:	025b      	lsls	r3, r3, #9
20000036:	4013      	ands	r3, r2
20000038:	d0f9      	beq.n	2000002e <delay_250ns+0x1e>
    *STK_CTRL = 0;
2000003a:	4b03      	ldr	r3, [pc, #12]	; (20000048 <delay_250ns+0x38>)
2000003c:	2200      	movs	r2, #0
2000003e:	601a      	str	r2, [r3, #0]
}
20000040:	46c0      	nop			; (mov r8, r8)
20000042:	46bd      	mov	sp, r7
20000044:	bd80      	pop	{r7, pc}
20000046:	46c0      	nop			; (mov r8, r8)
20000048:	e000e010 	and	lr, r0, r0, lsl r0
2000004c:	e000e014 	and	lr, r0, r4, lsl r0
20000050:	e000e018 	and	lr, r0, r8, lsl r0

20000054 <delay_micros>:

void delay_micros(unsigned int u) {
20000054:	b580      	push	{r7, lr}
20000056:	b082      	sub	sp, #8
20000058:	af00      	add	r7, sp, #0
2000005a:	6078      	str	r0, [r7, #4]
    #ifdef SIMULATOR
        u /= 1000;
        u++;
    #endif
    while (u--)
2000005c:	e007      	b.n	2000006e <delay_micros+0x1a>
    {
        delay_250ns();
2000005e:	f7ff ffd7 	bl	20000010 <delay_250ns>
        delay_250ns();
20000062:	f7ff ffd5 	bl	20000010 <delay_250ns>
        delay_250ns();
20000066:	f7ff ffd3 	bl	20000010 <delay_250ns>
        delay_250ns();
2000006a:	f7ff ffd1 	bl	20000010 <delay_250ns>
    while (u--)
2000006e:	687b      	ldr	r3, [r7, #4]
20000070:	1e5a      	subs	r2, r3, #1
20000072:	607a      	str	r2, [r7, #4]
20000074:	2b00      	cmp	r3, #0
20000076:	d1f2      	bne.n	2000005e <delay_micros+0xa>
    }
}
20000078:	46c0      	nop			; (mov r8, r8)
2000007a:	46bd      	mov	sp, r7
2000007c:	b002      	add	sp, #8
2000007e:	bd80      	pop	{r7, pc}

20000080 <delay_millis>:

void delay_millis(unsigned int m) 
{
20000080:	b580      	push	{r7, lr}
20000082:	b082      	sub	sp, #8
20000084:	af00      	add	r7, sp, #0
20000086:	6078      	str	r0, [r7, #4]
    delay_micros(m * 1000);
20000088:	687a      	ldr	r2, [r7, #4]
2000008a:	0013      	movs	r3, r2
2000008c:	015b      	lsls	r3, r3, #5
2000008e:	1a9b      	subs	r3, r3, r2
20000090:	009b      	lsls	r3, r3, #2
20000092:	189b      	adds	r3, r3, r2
20000094:	00db      	lsls	r3, r3, #3
20000096:	0018      	movs	r0, r3
20000098:	f7ff ffdc 	bl	20000054 <delay_micros>
}
2000009c:	46c0      	nop			; (mov r8, r8)
2000009e:	46bd      	mov	sp, r7
200000a0:	b002      	add	sp, #8
200000a2:	bd80      	pop	{r7, pc}

200000a4 <init_app>:

void init_app() {
200000a4:	b580      	push	{r7, lr}
200000a6:	af00      	add	r7, sp, #0
    *GPIO_D_MODER = 0x55555555;
200000a8:	4b02      	ldr	r3, [pc, #8]	; (200000b4 <init_app+0x10>)
200000aa:	4a03      	ldr	r2, [pc, #12]	; (200000b8 <init_app+0x14>)
200000ac:	601a      	str	r2, [r3, #0]
    #ifdef USBDM
        *((unsigned long *) 0x40023830) = 0x18;
        asm volatile("LDR R0,=0x08000209\n BKX R0\n");
    #endif
}
200000ae:	46c0      	nop			; (mov r8, r8)
200000b0:	46bd      	mov	sp, r7
200000b2:	bd80      	pop	{r7, pc}
200000b4:	40020c00 	andmi	r0, r2, r0, lsl #24
200000b8:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

200000bc <main>:


int main(void)
{
200000bc:	b580      	push	{r7, lr}
200000be:	af00      	add	r7, sp, #0
    init_app();
200000c0:	f7ff fff0 	bl	200000a4 <init_app>
    while(1) {
        *GPIO_D = 0xFF;
200000c4:	4b08      	ldr	r3, [pc, #32]	; (200000e8 <main+0x2c>)
200000c6:	22ff      	movs	r2, #255	; 0xff
200000c8:	701a      	strb	r2, [r3, #0]
        delay_micros(500);
200000ca:	23fa      	movs	r3, #250	; 0xfa
200000cc:	005b      	lsls	r3, r3, #1
200000ce:	0018      	movs	r0, r3
200000d0:	f7ff ffc0 	bl	20000054 <delay_micros>
        *GPIO_D = 0;
200000d4:	4b04      	ldr	r3, [pc, #16]	; (200000e8 <main+0x2c>)
200000d6:	2200      	movs	r2, #0
200000d8:	701a      	strb	r2, [r3, #0]
        delay_micros(500);
200000da:	23fa      	movs	r3, #250	; 0xfa
200000dc:	005b      	lsls	r3, r3, #1
200000de:	0018      	movs	r0, r3
200000e0:	f7ff ffb8 	bl	20000054 <delay_micros>
        *GPIO_D = 0xFF;
200000e4:	e7ee      	b.n	200000c4 <main+0x8>
200000e6:	46c0      	nop			; (mov r8, r8)
200000e8:	40020c14 	andmi	r0, r2, r4, lsl ip

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	000000c4 	andeq	r0, r0, r4, asr #1
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000097 	muleq	r0, r7, r0
  10:	0000420c 	andeq	r4, r0, ip, lsl #4
	...
  24:	00e90200 	rsceq	r0, r9, r0, lsl #4
  28:	40010000 	andmi	r0, r1, r0
  2c:	00003b05 	andeq	r3, r0, r5, lsl #22
  30:	0000bc00 	andeq	fp, r0, r0, lsl #24
  34:	00003020 	andeq	r3, r0, r0, lsr #32
  38:	039c0100 	orrseq	r0, ip, #0, 2
  3c:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
  40:	81040074 	tsthi	r4, r4, ror r0
  44:	01000000 	mrseq	r0, (UNDEF: 0)
  48:	00a40637 	adceq	r0, r4, r7, lsr r6
  4c:	00182000 	andseq	r2, r8, r0
  50:	9c010000 	stcls	0, cr0, [r1], {-0}
  54:	00008a05 	andeq	r8, r0, r5, lsl #20
  58:	06320100 	ldrteq	r0, [r2], -r0, lsl #2
  5c:	20000080 	andcs	r0, r0, r0, lsl #1
  60:	00000024 	andeq	r0, r0, r4, lsr #32
  64:	00789c01 	rsbseq	r9, r8, r1, lsl #24
  68:	6d060000 	stcvs	0, cr0, [r6, #-0]
  6c:	20320100 	eorscs	r0, r2, r0, lsl #2
  70:	00000078 	andeq	r0, r0, r8, ror r0
  74:	00749102 	rsbseq	r9, r4, r2, lsl #2
  78:	35070407 	strcc	r0, [r7, #-1031]	; 0xfffffbf9
  7c:	05000000 	streq	r0, [r0, #-0]
  80:	000000dc 	ldrdeq	r0, [r0], -ip
  84:	54062401 	strpl	r2, [r6], #-1025	; 0xfffffbff
  88:	2c200000 	stccs	0, cr0, [r0], #-0
  8c:	01000000 	mrseq	r0, (UNDEF: 0)
  90:	0000a39c 	muleq	r0, ip, r3
  94:	00750600 	rsbseq	r0, r5, r0, lsl #12
  98:	78202401 	stmdavc	r0!, {r0, sl, sp}
  9c:	02000000 	andeq	r0, r0, #0
  a0:	08007491 	stmdaeq	r0, {r0, r4, r7, sl, ip, sp, lr}
  a4:	000000ee 	andeq	r0, r0, lr, ror #1
  a8:	10061a01 	andne	r1, r6, r1, lsl #20
  ac:	44200000 	strtmi	r0, [r0], #-0
  b0:	01000000 	mrseq	r0, (UNDEF: 0)
  b4:	00d4089c 	smullseq	r0, r4, ip, r8
  b8:	07010000 	streq	r0, [r1, -r0]
  bc:	00000006 	andeq	r0, r0, r6
  c0:	00000c20 	andeq	r0, r0, r0, lsr #24
  c4:	009c0100 	addseq	r0, ip, r0, lsl #2

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  10:	02000017 	andeq	r0, r0, #23
  14:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
  18:	0b3a0e03 	bleq	e8382c <startup-0x1f17c7d4>
  1c:	0b390b3b 	bleq	e42d10 <startup-0x1f1bd2f0>
  20:	13491927 	movtne	r1, #39207	; 0x9927
  24:	06120111 			; <UNDEFINED> instruction: 0x06120111
  28:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  2c:	03000019 	movweq	r0, #25
  30:	0b0b0024 	bleq	2c00c8 <startup-0x1fd3ff38>
  34:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
  38:	2e040000 	cdpcs	0, 0, cr0, cr4, cr0, {0}
  3c:	03193f00 	tsteq	r9, #0, 30
  40:	3b0b3a0e 	blcc	2ce880 <startup-0x1fd31780>
  44:	110b390b 	tstne	fp, fp, lsl #18
  48:	40061201 	andmi	r1, r6, r1, lsl #4
  4c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
  50:	2e050000 	cdpcs	0, 0, cr0, cr5, cr0, {0}
  54:	03193f01 	tsteq	r9, #1, 30
  58:	3b0b3a0e 	blcc	2ce898 <startup-0x1fd31768>
  5c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
  60:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
  64:	96184006 	ldrls	r4, [r8], -r6
  68:	13011942 	movwne	r1, #6466	; 0x1942
  6c:	05060000 	streq	r0, [r6, #-0]
  70:	3a080300 	bcc	200c78 <startup-0x1fdff388>
  74:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  78:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  7c:	07000018 	smladeq	r0, r8, r0, r0
  80:	0b0b0024 	bleq	2c0118 <startup-0x1fd3fee8>
  84:	0e030b3e 	vmoveq.16	d3[0], r0
  88:	2e080000 	cdpcs	0, 0, cr0, cr8, cr0, {0}
  8c:	03193f00 	tsteq	r9, #0, 30
  90:	3b0b3a0e 	blcc	2ce8d0 <startup-0x1fd31730>
  94:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
  98:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
  9c:	97184006 	ldrls	r4, [r8, -r6]
  a0:	00001942 	andeq	r1, r0, r2, asr #18
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	000000dc 	ldrdeq	r0, [r0], -ip
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	200000ec 	andcs	r0, r0, ip, ror #1
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	00000111 	andeq	r0, r0, r1, lsl r1
   4:	00550003 	subseq	r0, r5, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	2f010000 	svccs	0x00010000
  1c:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
  20:	766f6c2f 	strbtvc	r6, [pc], -pc, lsr #24
  24:	6f442f65 	svcvs	0x00442f65
  28:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
  2c:	2f73746e 	svccs	0x0073746e
  30:	6c6f6b73 			; <UNDEFINED> instruction: 0x6c6f6b73
  34:	44452f61 	strbmi	r2, [r5], #-3937	; 0xfffff09f
  38:	32383441 	eorscc	r3, r8, #1090519040	; 0x41000000
  3c:	33564c2f 	cmpcc	r6, #12032	; 0x2f00
  40:	646f632f 	strbtvs	r6, [pc], #-815	; 48 <startup-0x1fffffb8>
  44:	74696c65 	strbtvc	r6, [r9], #-3173	; 0xfffff39b
  48:	65642f65 	strbvs	r2, [r4, #-3941]!	; 0xfffff09b
  4c:	0079616c 	rsbseq	r6, r9, ip, ror #2
  50:	61747300 	cmnvs	r4, r0, lsl #6
  54:	70757472 	rsbsvc	r7, r5, r2, ror r4
  58:	0100632e 	tsteq	r0, lr, lsr #6
  5c:	05000000 	streq	r0, [r0, #-0]
  60:	02050001 	andeq	r0, r5, #1
  64:	20000000 	andcs	r0, r0, r0
  68:	025e1319 	subseq	r1, lr, #1677721600	; 0x64000000
  6c:	01010003 	tsteq	r1, r3
  70:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
  74:	00001002 	andeq	r1, r0, r2
  78:	011a0320 	tsteq	sl, r0, lsr #6
  7c:	052f0505 	streq	r0, [pc, #-1285]!	; fffffb7f <main+0xdffffac3>
  80:	0505200f 	streq	r2, [r5, #-15]
  84:	200f052f 	andcs	r0, pc, pc, lsr #10
  88:	052f0505 	streq	r0, [pc, #-1285]!	; fffffb8b <main+0xdffffacf>
  8c:	0505200e 	streq	r2, [r5, #-14]
  90:	200f052f 	andcs	r0, pc, pc, lsr #10
  94:	052f0b05 	streq	r0, [pc, #-2821]!	; fffff597 <main+0xdffff4db>
  98:	0402000e 	streq	r0, [r2], #-14
  9c:	18052001 	stmdane	r5, {r0, sp}
  a0:	01040200 	mrseq	r0, R12_usr
  a4:	000b052e 	andeq	r0, fp, lr, lsr #10
  a8:	3c010402 	cfstrscc	mvf0, [r1], {2}
  ac:	05210505 	streq	r0, [r1, #-1285]!	; 0xfffffafb
  b0:	0105200f 	tsteq	r5, pc
  b4:	a023052f 	eorge	r0, r3, pc, lsr #10
  b8:	054f0b05 	strbeq	r0, [pc, #-2821]	; fffff5bb <main+0xdffff4ff>
  bc:	2f2f2209 	svccs	0x002f2209
  c0:	290d052f 	stmdbcs	sp, {r0, r1, r2, r3, r5, r8, sl}
  c4:	053c0b05 	ldreq	r0, [ip, #-2821]!	; 0xfffff4fb
  c8:	054d3501 	strbeq	r3, [sp, #-1281]	; 0xfffffaff
  cc:	01054b05 	tsteq	r5, r5, lsl #22
  d0:	4c11059f 	cfldr32mi	mvfx0, [r1], {159}	; 0x9f
  d4:	052f0505 	streq	r0, [pc, #-1285]!	; fffffbd7 <main+0xdffffb1b>
  d8:	01052013 	tsteq	r5, r3, lsl r0
  dc:	05057833 	streq	r7, [r5, #-2099]	; 0xfffff7cd
  e0:	0009052f 	andeq	r0, r9, pc, lsr #10
  e4:	30010402 	andcc	r0, r1, r2, lsl #8
  e8:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
  ec:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
  f0:	04020009 	streq	r0, [r2], #-9
  f4:	02002f01 	andeq	r2, r0, #1, 30
  f8:	05590104 	ldrbeq	r0, [r9, #-260]	; 0xfffffefc
  fc:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
 100:	09052001 	stmdbeq	r5, {r0, sp}
 104:	01040200 	mrseq	r0, R12_usr
 108:	0011052f 	andseq	r0, r1, pc, lsr #10
 10c:	55010402 	strpl	r0, [r1, #-1026]	; 0xfffffbfe
 110:	01000402 	tsteq	r0, r2, lsl #8
 114:	Address 0x0000000000000114 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; ffffff4c <main+0xdffffe90>
   4:	6f6c2f65 	svcvs	0x006c2f65
   8:	442f6576 	strtmi	r6, [pc], #-1398	; 10 <startup-0x1ffffff0>
   c:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
  10:	73746e65 	cmnvc	r4, #1616	; 0x650
  14:	6f6b732f 	svcvs	0x006b732f
  18:	452f616c 	strmi	r6, [pc, #-364]!	; fffffeb4 <main+0xdffffdf8>
  1c:	38344144 	ldmdacc	r4!, {r2, r6, r8, lr}
  20:	564c2f32 			; <UNDEFINED> instruction: 0x564c2f32
  24:	6f632f33 	svcvs	0x00632f33
  28:	696c6564 	stmdbvs	ip!, {r2, r5, r6, r8, sl, sp, lr}^
  2c:	642f6574 	strtvs	r6, [pc], #-1396	; 34 <startup-0x1fffffcc>
  30:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
  34:	736e7500 	cmnvc	lr, #0, 10
  38:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
  3c:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
  40:	682f0074 	stmdavs	pc!, {r2, r4, r5, r6}	; <UNPREDICTABLE>
  44:	2f656d6f 	svccs	0x00656d6f
  48:	65766f6c 	ldrbvs	r6, [r6, #-3948]!	; 0xfffff094
  4c:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
  50:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
  54:	732f7374 			; <UNDEFINED> instruction: 0x732f7374
  58:	616c6f6b 	cmnvs	ip, fp, ror #30
  5c:	4144452f 	cmpmi	r4, pc, lsr #10
  60:	2f323834 	svccs	0x00323834
  64:	2f33564c 	svccs	0x0033564c
  68:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
  6c:	6574696c 	ldrbvs	r6, [r4, #-2412]!	; 0xfffff694
  70:	6c65642f 	cfstrdvs	mvd6, [r5], #-188	; 0xffffff44
  74:	732f7961 			; <UNDEFINED> instruction: 0x732f7961
  78:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
  7c:	632e7075 			; <UNDEFINED> instruction: 0x632e7075
  80:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
  84:	70615f74 	rsbvc	r5, r1, r4, ror pc
  88:	65640070 	strbvs	r0, [r4, #-112]!	; 0xffffff90
  8c:	5f79616c 	svcpl	0x0079616c
  90:	6c6c696d 			; <UNDEFINED> instruction: 0x6c6c696d
  94:	47007369 	strmi	r7, [r0, -r9, ror #6]
  98:	4320554e 			; <UNDEFINED> instruction: 0x4320554e
  9c:	38203731 	stmdacc	r0!, {r0, r4, r5, r8, r9, sl, ip, sp}
  a0:	302e332e 	eorcc	r3, lr, lr, lsr #6
  a4:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xfffff2e0
  a8:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
  ac:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
  b0:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
  b4:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
  b8:	666f733d 			; <UNDEFINED> instruction: 0x666f733d
  bc:	6d2d2074 	stcvs	0, cr2, [sp, #-464]!	; 0xfffffe30
  c0:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
  c4:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
  c8:	6d2d3676 	stcvs	6, cr3, [sp, #-472]!	; 0xfffffe28
  cc:	20672d20 	rsbcs	r2, r7, r0, lsr #26
  d0:	00304f2d 	eorseq	r4, r0, sp, lsr #30
  d4:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  d8:	00707574 	rsbseq	r7, r0, r4, ror r5
  dc:	616c6564 	cmnvs	ip, r4, ror #10
  e0:	696d5f79 	stmdbvs	sp!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
  e4:	736f7263 	cmnvc	pc, #805306374	; 0x30000006
  e8:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
  ec:	6564006e 	strbvs	r0, [r4, #-110]!	; 0xffffff92
  f0:	5f79616c 	svcpl	0x0079616c
  f4:	6e303532 	mrcvs	5, 1, r3, cr0, cr2, {1}
  f8:	Address 0x00000000000000f8 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	72412820 	subvc	r2, r1, #32, 16	; 0x200000
   8:	52206863 	eorpl	r6, r0, #6488064	; 0x630000
   c:	736f7065 	cmnvc	pc, #101	; 0x65
  10:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
  14:	38202979 	stmdacc	r0!, {r0, r3, r4, r5, r6, r8, fp, sp}
  18:	302e332e 	eorcc	r3, lr, lr, lsr #6
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x0000000000000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000044 	andeq	r0, r0, r4, asr #32
  30:	40080e41 	andmi	r0, r8, r1, asr #28
  34:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  38:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  3c:	0000001c 	andeq	r0, r0, ip, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	20000054 	andcs	r0, r0, r4, asr r0
  48:	0000002c 	andeq	r0, r0, ip, lsr #32
  4c:	40080e41 	andmi	r0, r8, r1, asr #28
  50:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  54:	100e4101 	andne	r4, lr, r1, lsl #2
  58:	00070d41 	andeq	r0, r7, r1, asr #26
  5c:	0000001c 	andeq	r0, r0, ip, lsl r0
  60:	00000000 	andeq	r0, r0, r0
  64:	20000080 	andcs	r0, r0, r0, lsl #1
  68:	00000024 	andeq	r0, r0, r4, lsr #32
  6c:	40080e41 	andmi	r0, r8, r1, asr #28
  70:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  74:	100e4101 	andne	r4, lr, r1, lsl #2
  78:	00070d41 	andeq	r0, r7, r1, asr #26
  7c:	00000018 	andeq	r0, r0, r8, lsl r0
  80:	00000000 	andeq	r0, r0, r0
  84:	200000a4 	andcs	r0, r0, r4, lsr #1
  88:	00000018 	andeq	r0, r0, r8, lsl r0
  8c:	40080e41 	andmi	r0, r8, r1, asr #28
  90:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  94:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  98:	00000018 	andeq	r0, r0, r8, lsl r0
  9c:	00000000 	andeq	r0, r0, r0
  a0:	200000bc 	strhcs	r0, [r0], -ip
  a4:	00000030 	andeq	r0, r0, r0, lsr r0
  a8:	40080e41 	andmi	r0, r8, r1, asr #28
  ac:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  b0:	070d4101 	streq	r4, [sp, -r1, lsl #2]
